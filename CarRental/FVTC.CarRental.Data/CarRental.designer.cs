#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FVTC.CarRental.Data
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBEverson")]
	public partial class CarRentalDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertRentalCustomer(RentalCustomer instance);
    partial void UpdateRentalCustomer(RentalCustomer instance);
    partial void DeleteRentalCustomer(RentalCustomer instance);
    partial void InsertRentalVehicle(RentalVehicle instance);
    partial void UpdateRentalVehicle(RentalVehicle instance);
    partial void DeleteRentalVehicle(RentalVehicle instance);
    partial void InsertRentalLot(RentalLot instance);
    partial void UpdateRentalLot(RentalLot instance);
    partial void DeleteRentalLot(RentalLot instance);
    partial void InsertRentalTransaction(RentalTransaction instance);
    partial void UpdateRentalTransaction(RentalTransaction instance);
    partial void DeleteRentalTransaction(RentalTransaction instance);
    partial void InsertRentalLog(RentalLog instance);
    partial void UpdateRentalLog(RentalLog instance);
    partial void DeleteRentalLog(RentalLog instance);
    #endregion
		
		public CarRentalDataContext() : 
				base(global::FVTC.CarRental.Data.Properties.Settings.Default.DBEversonConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public CarRentalDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarRentalDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarRentalDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public CarRentalDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<RentalCustomer> RentalCustomers
		{
			get
			{
				return this.GetTable<RentalCustomer>();
			}
		}
		
		public System.Data.Linq.Table<RentalVehicle> RentalVehicles
		{
			get
			{
				return this.GetTable<RentalVehicle>();
			}
		}
		
		public System.Data.Linq.Table<RentalLot> RentalLots
		{
			get
			{
				return this.GetTable<RentalLot>();
			}
		}
		
		public System.Data.Linq.Table<RentalTransaction> RentalTransactions
		{
			get
			{
				return this.GetTable<RentalTransaction>();
			}
		}
		
		public System.Data.Linq.Table<RentalLog> RentalLogs
		{
			get
			{
				return this.GetTable<RentalLog>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.sp_GetCustomerByLastName")]
		public ISingleResult<sp_GetCustomerByLastNameResult> sp_GetCustomerByLastName([global::System.Data.Linq.Mapping.ParameterAttribute(Name="Name", DbType="VarChar(25)")] string name)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), name);
			return ((ISingleResult<sp_GetCustomerByLastNameResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RentalCustomers")]
	public partial class RentalCustomer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Customer_Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _CompanyName;
		
		private string _CompanyPhone;
		
		private string _Email;
		
		private string _LicenseNumber;
		
		private string _CreditCard;
		
		private System.Nullable<bool> _DoNotRent;
		
		private EntitySet<RentalTransaction> _RentalTransactions;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCustomer_IdChanging(int value);
    partial void OnCustomer_IdChanged();
    partial void OnFirstNameChanging(string value);
    partial void OnFirstNameChanged();
    partial void OnLastNameChanging(string value);
    partial void OnLastNameChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCityChanging(string value);
    partial void OnCityChanged();
    partial void OnStateChanging(string value);
    partial void OnStateChanged();
    partial void OnZipChanging(string value);
    partial void OnZipChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnCompanyNameChanging(string value);
    partial void OnCompanyNameChanged();
    partial void OnCompanyPhoneChanging(string value);
    partial void OnCompanyPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnLicenseNumberChanging(string value);
    partial void OnLicenseNumberChanged();
    partial void OnCreditCardChanging(string value);
    partial void OnCreditCardChanged();
    partial void OnDoNotRentChanging(System.Nullable<bool> value);
    partial void OnDoNotRentChanged();
    #endregion
		
		public RentalCustomer()
		{
			this._RentalTransactions = new EntitySet<RentalTransaction>(new Action<RentalTransaction>(this.attach_RentalTransactions), new Action<RentalTransaction>(this.detach_RentalTransactions));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Customer_Id
		{
			get
			{
				return this._Customer_Id;
			}
			set
			{
				if ((this._Customer_Id != value))
				{
					this.OnCustomer_IdChanging(value);
					this.SendPropertyChanging();
					this._Customer_Id = value;
					this.SendPropertyChanged("Customer_Id");
					this.OnCustomer_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this.OnFirstNameChanging(value);
					this.SendPropertyChanging();
					this._FirstName = value;
					this.SendPropertyChanged("FirstName");
					this.OnFirstNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this.OnLastNameChanging(value);
					this.SendPropertyChanging();
					this._LastName = value;
					this.SendPropertyChanged("LastName");
					this.OnLastNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(48) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this.OnCityChanging(value);
					this.SendPropertyChanging();
					this._City = value;
					this.SendPropertyChanged("City");
					this.OnCityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this.OnStateChanging(value);
					this.SendPropertyChanging();
					this._State = value;
					this.SendPropertyChanged("State");
					this.OnStateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this.OnZipChanging(value);
					this.SendPropertyChanging();
					this._Zip = value;
					this.SendPropertyChanged("Zip");
					this.OnZipChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(128)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this.OnCompanyNameChanging(value);
					this.SendPropertyChanging();
					this._CompanyName = value;
					this.SendPropertyChanged("CompanyName");
					this.OnCompanyNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyPhone", DbType="VarChar(12)")]
		public string CompanyPhone
		{
			get
			{
				return this._CompanyPhone;
			}
			set
			{
				if ((this._CompanyPhone != value))
				{
					this.OnCompanyPhoneChanging(value);
					this.SendPropertyChanging();
					this._CompanyPhone = value;
					this.SendPropertyChanged("CompanyPhone");
					this.OnCompanyPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(64)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this.OnLicenseNumberChanging(value);
					this.SendPropertyChanging();
					this._LicenseNumber = value;
					this.SendPropertyChanged("LicenseNumber");
					this.OnLicenseNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard", DbType="VarChar(50)")]
		public string CreditCard
		{
			get
			{
				return this._CreditCard;
			}
			set
			{
				if ((this._CreditCard != value))
				{
					this.OnCreditCardChanging(value);
					this.SendPropertyChanging();
					this._CreditCard = value;
					this.SendPropertyChanged("CreditCard");
					this.OnCreditCardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotRent", DbType="Bit")]
		public System.Nullable<bool> DoNotRent
		{
			get
			{
				return this._DoNotRent;
			}
			set
			{
				if ((this._DoNotRent != value))
				{
					this.OnDoNotRentChanging(value);
					this.SendPropertyChanging();
					this._DoNotRent = value;
					this.SendPropertyChanged("DoNotRent");
					this.OnDoNotRentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RentalCustomer_RentalTransaction", Storage="_RentalTransactions", ThisKey="Customer_Id", OtherKey="Customer_ID")]
		public EntitySet<RentalTransaction> RentalTransactions
		{
			get
			{
				return this._RentalTransactions;
			}
			set
			{
				this._RentalTransactions.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RentalTransactions(RentalTransaction entity)
		{
			this.SendPropertyChanging();
			entity.RentalCustomer = this;
		}
		
		private void detach_RentalTransactions(RentalTransaction entity)
		{
			this.SendPropertyChanging();
			entity.RentalCustomer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RentalVehicles")]
	public partial class RentalVehicle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Vehicle_Id;
		
		private string _Make;
		
		private string _Model;
		
		private string _Category;
		
		private string _Year;
		
		private string _VinNumber;
		
		private System.Nullable<decimal> _Cost;
		
		private System.Nullable<System.DateTime> _RegistrationExpiration;
		
		private System.Nullable<int> _Location_Id;
		
		private int _Mileage;
		
		private System.Nullable<int> _LastOilChange;
		
		private System.Nullable<int> _LastBrakeJob;
		
		private System.Nullable<int> _LastAirFilter;
		
		private System.Nullable<int> _TireTreads;
		
		private System.Nullable<System.DateTime> _LastCoolingFlush;
		
		private System.Nullable<System.DateTime> _InService;
		
		private System.Nullable<int> _InServiceMiles;
		
		private System.Nullable<bool> _NeedAnalysis;
		
		private EntitySet<RentalTransaction> _RentalTransactions;
		
		private EntityRef<RentalLot> _RentalLot;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnVehicle_IdChanging(int value);
    partial void OnVehicle_IdChanged();
    partial void OnMakeChanging(string value);
    partial void OnMakeChanged();
    partial void OnModelChanging(string value);
    partial void OnModelChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnYearChanging(string value);
    partial void OnYearChanged();
    partial void OnVinNumberChanging(string value);
    partial void OnVinNumberChanged();
    partial void OnCostChanging(System.Nullable<decimal> value);
    partial void OnCostChanged();
    partial void OnRegistrationExpirationChanging(System.Nullable<System.DateTime> value);
    partial void OnRegistrationExpirationChanged();
    partial void OnLocation_IdChanging(System.Nullable<int> value);
    partial void OnLocation_IdChanged();
    partial void OnMileageChanging(int value);
    partial void OnMileageChanged();
    partial void OnLastOilChangeChanging(System.Nullable<int> value);
    partial void OnLastOilChangeChanged();
    partial void OnLastBrakeJobChanging(System.Nullable<int> value);
    partial void OnLastBrakeJobChanged();
    partial void OnLastAirFilterChanging(System.Nullable<int> value);
    partial void OnLastAirFilterChanged();
    partial void OnTireTreadsChanging(System.Nullable<int> value);
    partial void OnTireTreadsChanged();
    partial void OnLastCoolingFlushChanging(System.Nullable<System.DateTime> value);
    partial void OnLastCoolingFlushChanged();
    partial void OnInServiceChanging(System.Nullable<System.DateTime> value);
    partial void OnInServiceChanged();
    partial void OnInServiceMilesChanging(System.Nullable<int> value);
    partial void OnInServiceMilesChanged();
    partial void OnNeedAnalysisChanging(System.Nullable<bool> value);
    partial void OnNeedAnalysisChanged();
    #endregion
		
		public RentalVehicle()
		{
			this._RentalTransactions = new EntitySet<RentalTransaction>(new Action<RentalTransaction>(this.attach_RentalTransactions), new Action<RentalTransaction>(this.detach_RentalTransactions));
			this._RentalLot = default(EntityRef<RentalLot>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Vehicle_Id
		{
			get
			{
				return this._Vehicle_Id;
			}
			set
			{
				if ((this._Vehicle_Id != value))
				{
					this.OnVehicle_IdChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_Id = value;
					this.SendPropertyChanged("Vehicle_Id");
					this.OnVehicle_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Make", DbType="VarChar(32)")]
		public string Make
		{
			get
			{
				return this._Make;
			}
			set
			{
				if ((this._Make != value))
				{
					this.OnMakeChanging(value);
					this.SendPropertyChanging();
					this._Make = value;
					this.SendPropertyChanged("Make");
					this.OnMakeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Model", DbType="VarChar(32)")]
		public string Model
		{
			get
			{
				return this._Model;
			}
			set
			{
				if ((this._Model != value))
				{
					this.OnModelChanging(value);
					this.SendPropertyChanging();
					this._Model = value;
					this.SendPropertyChanged("Model");
					this.OnModelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(50)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Year", DbType="VarChar(4)")]
		public string Year
		{
			get
			{
				return this._Year;
			}
			set
			{
				if ((this._Year != value))
				{
					this.OnYearChanging(value);
					this.SendPropertyChanging();
					this._Year = value;
					this.SendPropertyChanged("Year");
					this.OnYearChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VinNumber", DbType="VarChar(32)")]
		public string VinNumber
		{
			get
			{
				return this._VinNumber;
			}
			set
			{
				if ((this._VinNumber != value))
				{
					this.OnVinNumberChanging(value);
					this.SendPropertyChanging();
					this._VinNumber = value;
					this.SendPropertyChanged("VinNumber");
					this.OnVinNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cost", DbType="Money")]
		public System.Nullable<decimal> Cost
		{
			get
			{
				return this._Cost;
			}
			set
			{
				if ((this._Cost != value))
				{
					this.OnCostChanging(value);
					this.SendPropertyChanging();
					this._Cost = value;
					this.SendPropertyChanged("Cost");
					this.OnCostChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RegistrationExpiration", DbType="Date")]
		public System.Nullable<System.DateTime> RegistrationExpiration
		{
			get
			{
				return this._RegistrationExpiration;
			}
			set
			{
				if ((this._RegistrationExpiration != value))
				{
					this.OnRegistrationExpirationChanging(value);
					this.SendPropertyChanging();
					this._RegistrationExpiration = value;
					this.SendPropertyChanged("RegistrationExpiration");
					this.OnRegistrationExpirationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Id", DbType="Int")]
		public System.Nullable<int> Location_Id
		{
			get
			{
				return this._Location_Id;
			}
			set
			{
				if ((this._Location_Id != value))
				{
					if (this._RentalLot.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnLocation_IdChanging(value);
					this.SendPropertyChanging();
					this._Location_Id = value;
					this.SendPropertyChanged("Location_Id");
					this.OnLocation_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mileage", DbType="Int NOT NULL")]
		public int Mileage
		{
			get
			{
				return this._Mileage;
			}
			set
			{
				if ((this._Mileage != value))
				{
					this.OnMileageChanging(value);
					this.SendPropertyChanging();
					this._Mileage = value;
					this.SendPropertyChanged("Mileage");
					this.OnMileageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastOilChange", DbType="Int")]
		public System.Nullable<int> LastOilChange
		{
			get
			{
				return this._LastOilChange;
			}
			set
			{
				if ((this._LastOilChange != value))
				{
					this.OnLastOilChangeChanging(value);
					this.SendPropertyChanging();
					this._LastOilChange = value;
					this.SendPropertyChanged("LastOilChange");
					this.OnLastOilChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastBrakeJob", DbType="Int")]
		public System.Nullable<int> LastBrakeJob
		{
			get
			{
				return this._LastBrakeJob;
			}
			set
			{
				if ((this._LastBrakeJob != value))
				{
					this.OnLastBrakeJobChanging(value);
					this.SendPropertyChanging();
					this._LastBrakeJob = value;
					this.SendPropertyChanged("LastBrakeJob");
					this.OnLastBrakeJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastAirFilter", DbType="Int")]
		public System.Nullable<int> LastAirFilter
		{
			get
			{
				return this._LastAirFilter;
			}
			set
			{
				if ((this._LastAirFilter != value))
				{
					this.OnLastAirFilterChanging(value);
					this.SendPropertyChanging();
					this._LastAirFilter = value;
					this.SendPropertyChanged("LastAirFilter");
					this.OnLastAirFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TireTreads", DbType="Int")]
		public System.Nullable<int> TireTreads
		{
			get
			{
				return this._TireTreads;
			}
			set
			{
				if ((this._TireTreads != value))
				{
					this.OnTireTreadsChanging(value);
					this.SendPropertyChanging();
					this._TireTreads = value;
					this.SendPropertyChanged("TireTreads");
					this.OnTireTreadsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastCoolingFlush", DbType="Date")]
		public System.Nullable<System.DateTime> LastCoolingFlush
		{
			get
			{
				return this._LastCoolingFlush;
			}
			set
			{
				if ((this._LastCoolingFlush != value))
				{
					this.OnLastCoolingFlushChanging(value);
					this.SendPropertyChanging();
					this._LastCoolingFlush = value;
					this.SendPropertyChanged("LastCoolingFlush");
					this.OnLastCoolingFlushChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InService", DbType="Date")]
		public System.Nullable<System.DateTime> InService
		{
			get
			{
				return this._InService;
			}
			set
			{
				if ((this._InService != value))
				{
					this.OnInServiceChanging(value);
					this.SendPropertyChanging();
					this._InService = value;
					this.SendPropertyChanged("InService");
					this.OnInServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_InServiceMiles", DbType="Int")]
		public System.Nullable<int> InServiceMiles
		{
			get
			{
				return this._InServiceMiles;
			}
			set
			{
				if ((this._InServiceMiles != value))
				{
					this.OnInServiceMilesChanging(value);
					this.SendPropertyChanging();
					this._InServiceMiles = value;
					this.SendPropertyChanged("InServiceMiles");
					this.OnInServiceMilesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NeedAnalysis", DbType="Bit")]
		public System.Nullable<bool> NeedAnalysis
		{
			get
			{
				return this._NeedAnalysis;
			}
			set
			{
				if ((this._NeedAnalysis != value))
				{
					this.OnNeedAnalysisChanging(value);
					this.SendPropertyChanging();
					this._NeedAnalysis = value;
					this.SendPropertyChanged("NeedAnalysis");
					this.OnNeedAnalysisChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RentalVehicle_RentalTransaction", Storage="_RentalTransactions", ThisKey="Vehicle_Id", OtherKey="Vehicle_ID")]
		public EntitySet<RentalTransaction> RentalTransactions
		{
			get
			{
				return this._RentalTransactions;
			}
			set
			{
				this._RentalTransactions.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RentalLot_RentalVehicle", Storage="_RentalLot", ThisKey="Location_Id", OtherKey="Location_Id", IsForeignKey=true)]
		public RentalLot RentalLot
		{
			get
			{
				return this._RentalLot.Entity;
			}
			set
			{
				RentalLot previousValue = this._RentalLot.Entity;
				if (((previousValue != value) 
							|| (this._RentalLot.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RentalLot.Entity = null;
						previousValue.RentalVehicles.Remove(this);
					}
					this._RentalLot.Entity = value;
					if ((value != null))
					{
						value.RentalVehicles.Add(this);
						this._Location_Id = value.Location_Id;
					}
					else
					{
						this._Location_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("RentalLot");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RentalTransactions(RentalTransaction entity)
		{
			this.SendPropertyChanging();
			entity.RentalVehicle = this;
		}
		
		private void detach_RentalTransactions(RentalTransaction entity)
		{
			this.SendPropertyChanging();
			entity.RentalVehicle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RentalLot")]
	public partial class RentalLot : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Location_Id;
		
		private string _Location_Row;
		
		private int _Location_Slot;
		
		private EntitySet<RentalVehicle> _RentalVehicles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLocation_IdChanging(int value);
    partial void OnLocation_IdChanged();
    partial void OnLocation_RowChanging(string value);
    partial void OnLocation_RowChanged();
    partial void OnLocation_SlotChanging(int value);
    partial void OnLocation_SlotChanged();
    #endregion
		
		public RentalLot()
		{
			this._RentalVehicles = new EntitySet<RentalVehicle>(new Action<RentalVehicle>(this.attach_RentalVehicles), new Action<RentalVehicle>(this.detach_RentalVehicles));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Location_Id
		{
			get
			{
				return this._Location_Id;
			}
			set
			{
				if ((this._Location_Id != value))
				{
					this.OnLocation_IdChanging(value);
					this.SendPropertyChanging();
					this._Location_Id = value;
					this.SendPropertyChanged("Location_Id");
					this.OnLocation_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Row", DbType="VarChar(1) NOT NULL", CanBeNull=false)]
		public string Location_Row
		{
			get
			{
				return this._Location_Row;
			}
			set
			{
				if ((this._Location_Row != value))
				{
					this.OnLocation_RowChanging(value);
					this.SendPropertyChanging();
					this._Location_Row = value;
					this.SendPropertyChanged("Location_Row");
					this.OnLocation_RowChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location_Slot", DbType="Int NOT NULL")]
		public int Location_Slot
		{
			get
			{
				return this._Location_Slot;
			}
			set
			{
				if ((this._Location_Slot != value))
				{
					this.OnLocation_SlotChanging(value);
					this.SendPropertyChanging();
					this._Location_Slot = value;
					this.SendPropertyChanged("Location_Slot");
					this.OnLocation_SlotChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RentalLot_RentalVehicle", Storage="_RentalVehicles", ThisKey="Location_Id", OtherKey="Location_Id")]
		public EntitySet<RentalVehicle> RentalVehicles
		{
			get
			{
				return this._RentalVehicles;
			}
			set
			{
				this._RentalVehicles.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RentalVehicles(RentalVehicle entity)
		{
			this.SendPropertyChanging();
			entity.RentalLot = this;
		}
		
		private void detach_RentalVehicles(RentalVehicle entity)
		{
			this.SendPropertyChanging();
			entity.RentalLot = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RentalTransactions")]
	public partial class RentalTransaction : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _TransactionID;
		
		private int _Customer_ID;
		
		private int _Vehicle_ID;
		
		private string _TransactionType;
		
		private System.Nullable<System.DateTime> _TransactionDate;
		
		private System.Nullable<decimal> _RentalCharge;
		
		private System.Nullable<decimal> _FuelCharge;
		
		private System.Nullable<decimal> _ExcessMilesCharge;
		
		private System.Nullable<decimal> _TotalCharge;
		
		private string _Comments;
		
		private System.Nullable<bool> _MaintOilChange;
		
		private System.Nullable<bool> _MaintAirFilter;
		
		private System.Nullable<bool> _MaintBrakeJob;
		
		private System.Nullable<bool> _MaintTireChange;
		
		private EntityRef<RentalCustomer> _RentalCustomer;
		
		private EntityRef<RentalVehicle> _RentalVehicle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTransactionIDChanging(int value);
    partial void OnTransactionIDChanged();
    partial void OnCustomer_IDChanging(int value);
    partial void OnCustomer_IDChanged();
    partial void OnVehicle_IDChanging(int value);
    partial void OnVehicle_IDChanged();
    partial void OnTransactionTypeChanging(string value);
    partial void OnTransactionTypeChanged();
    partial void OnTransactionDateChanging(System.Nullable<System.DateTime> value);
    partial void OnTransactionDateChanged();
    partial void OnRentalChargeChanging(System.Nullable<decimal> value);
    partial void OnRentalChargeChanged();
    partial void OnFuelChargeChanging(System.Nullable<decimal> value);
    partial void OnFuelChargeChanged();
    partial void OnExcessMilesChargeChanging(System.Nullable<decimal> value);
    partial void OnExcessMilesChargeChanged();
    partial void OnTotalChargeChanging(System.Nullable<decimal> value);
    partial void OnTotalChargeChanged();
    partial void OnCommentsChanging(string value);
    partial void OnCommentsChanged();
    partial void OnMaintOilChangeChanging(System.Nullable<bool> value);
    partial void OnMaintOilChangeChanged();
    partial void OnMaintAirFilterChanging(System.Nullable<bool> value);
    partial void OnMaintAirFilterChanged();
    partial void OnMaintBrakeJobChanging(System.Nullable<bool> value);
    partial void OnMaintBrakeJobChanged();
    partial void OnMaintTireChangeChanging(System.Nullable<bool> value);
    partial void OnMaintTireChangeChanged();
    #endregion
		
		public RentalTransaction()
		{
			this._RentalCustomer = default(EntityRef<RentalCustomer>);
			this._RentalVehicle = default(EntityRef<RentalVehicle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int TransactionID
		{
			get
			{
				return this._TransactionID;
			}
			set
			{
				if ((this._TransactionID != value))
				{
					this.OnTransactionIDChanging(value);
					this.SendPropertyChanging();
					this._TransactionID = value;
					this.SendPropertyChanged("TransactionID");
					this.OnTransactionIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_ID", DbType="Int NOT NULL")]
		public int Customer_ID
		{
			get
			{
				return this._Customer_ID;
			}
			set
			{
				if ((this._Customer_ID != value))
				{
					if (this._RentalCustomer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnCustomer_IDChanging(value);
					this.SendPropertyChanging();
					this._Customer_ID = value;
					this.SendPropertyChanged("Customer_ID");
					this.OnCustomer_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Vehicle_ID", DbType="Int NOT NULL")]
		public int Vehicle_ID
		{
			get
			{
				return this._Vehicle_ID;
			}
			set
			{
				if ((this._Vehicle_ID != value))
				{
					if (this._RentalVehicle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnVehicle_IDChanging(value);
					this.SendPropertyChanging();
					this._Vehicle_ID = value;
					this.SendPropertyChanged("Vehicle_ID");
					this.OnVehicle_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionType", DbType="VarChar(50)")]
		public string TransactionType
		{
			get
			{
				return this._TransactionType;
			}
			set
			{
				if ((this._TransactionType != value))
				{
					this.OnTransactionTypeChanging(value);
					this.SendPropertyChanging();
					this._TransactionType = value;
					this.SendPropertyChanged("TransactionType");
					this.OnTransactionTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionDate", DbType="Date")]
		public System.Nullable<System.DateTime> TransactionDate
		{
			get
			{
				return this._TransactionDate;
			}
			set
			{
				if ((this._TransactionDate != value))
				{
					this.OnTransactionDateChanging(value);
					this.SendPropertyChanging();
					this._TransactionDate = value;
					this.SendPropertyChanged("TransactionDate");
					this.OnTransactionDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RentalCharge", DbType="Money")]
		public System.Nullable<decimal> RentalCharge
		{
			get
			{
				return this._RentalCharge;
			}
			set
			{
				if ((this._RentalCharge != value))
				{
					this.OnRentalChargeChanging(value);
					this.SendPropertyChanging();
					this._RentalCharge = value;
					this.SendPropertyChanged("RentalCharge");
					this.OnRentalChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FuelCharge", DbType="Money")]
		public System.Nullable<decimal> FuelCharge
		{
			get
			{
				return this._FuelCharge;
			}
			set
			{
				if ((this._FuelCharge != value))
				{
					this.OnFuelChargeChanging(value);
					this.SendPropertyChanging();
					this._FuelCharge = value;
					this.SendPropertyChanged("FuelCharge");
					this.OnFuelChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ExcessMilesCharge", DbType="Money")]
		public System.Nullable<decimal> ExcessMilesCharge
		{
			get
			{
				return this._ExcessMilesCharge;
			}
			set
			{
				if ((this._ExcessMilesCharge != value))
				{
					this.OnExcessMilesChargeChanging(value);
					this.SendPropertyChanging();
					this._ExcessMilesCharge = value;
					this.SendPropertyChanged("ExcessMilesCharge");
					this.OnExcessMilesChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalCharge", DbType="Money")]
		public System.Nullable<decimal> TotalCharge
		{
			get
			{
				return this._TotalCharge;
			}
			set
			{
				if ((this._TotalCharge != value))
				{
					this.OnTotalChargeChanging(value);
					this.SendPropertyChanging();
					this._TotalCharge = value;
					this.SendPropertyChanged("TotalCharge");
					this.OnTotalChargeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Comments", DbType="VarChar(256)")]
		public string Comments
		{
			get
			{
				return this._Comments;
			}
			set
			{
				if ((this._Comments != value))
				{
					this.OnCommentsChanging(value);
					this.SendPropertyChanging();
					this._Comments = value;
					this.SendPropertyChanged("Comments");
					this.OnCommentsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintOilChange", DbType="Bit")]
		public System.Nullable<bool> MaintOilChange
		{
			get
			{
				return this._MaintOilChange;
			}
			set
			{
				if ((this._MaintOilChange != value))
				{
					this.OnMaintOilChangeChanging(value);
					this.SendPropertyChanging();
					this._MaintOilChange = value;
					this.SendPropertyChanged("MaintOilChange");
					this.OnMaintOilChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintAirFilter", DbType="Bit")]
		public System.Nullable<bool> MaintAirFilter
		{
			get
			{
				return this._MaintAirFilter;
			}
			set
			{
				if ((this._MaintAirFilter != value))
				{
					this.OnMaintAirFilterChanging(value);
					this.SendPropertyChanging();
					this._MaintAirFilter = value;
					this.SendPropertyChanged("MaintAirFilter");
					this.OnMaintAirFilterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintBrakeJob", DbType="Bit")]
		public System.Nullable<bool> MaintBrakeJob
		{
			get
			{
				return this._MaintBrakeJob;
			}
			set
			{
				if ((this._MaintBrakeJob != value))
				{
					this.OnMaintBrakeJobChanging(value);
					this.SendPropertyChanging();
					this._MaintBrakeJob = value;
					this.SendPropertyChanged("MaintBrakeJob");
					this.OnMaintBrakeJobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MaintTireChange", DbType="Bit")]
		public System.Nullable<bool> MaintTireChange
		{
			get
			{
				return this._MaintTireChange;
			}
			set
			{
				if ((this._MaintTireChange != value))
				{
					this.OnMaintTireChangeChanging(value);
					this.SendPropertyChanging();
					this._MaintTireChange = value;
					this.SendPropertyChanged("MaintTireChange");
					this.OnMaintTireChangeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RentalCustomer_RentalTransaction", Storage="_RentalCustomer", ThisKey="Customer_ID", OtherKey="Customer_Id", IsForeignKey=true)]
		public RentalCustomer RentalCustomer
		{
			get
			{
				return this._RentalCustomer.Entity;
			}
			set
			{
				RentalCustomer previousValue = this._RentalCustomer.Entity;
				if (((previousValue != value) 
							|| (this._RentalCustomer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RentalCustomer.Entity = null;
						previousValue.RentalTransactions.Remove(this);
					}
					this._RentalCustomer.Entity = value;
					if ((value != null))
					{
						value.RentalTransactions.Add(this);
						this._Customer_ID = value.Customer_Id;
					}
					else
					{
						this._Customer_ID = default(int);
					}
					this.SendPropertyChanged("RentalCustomer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RentalVehicle_RentalTransaction", Storage="_RentalVehicle", ThisKey="Vehicle_ID", OtherKey="Vehicle_Id", IsForeignKey=true)]
		public RentalVehicle RentalVehicle
		{
			get
			{
				return this._RentalVehicle.Entity;
			}
			set
			{
				RentalVehicle previousValue = this._RentalVehicle.Entity;
				if (((previousValue != value) 
							|| (this._RentalVehicle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RentalVehicle.Entity = null;
						previousValue.RentalTransactions.Remove(this);
					}
					this._RentalVehicle.Entity = value;
					if ((value != null))
					{
						value.RentalTransactions.Add(this);
						this._Vehicle_ID = value.Vehicle_Id;
					}
					else
					{
						this._Vehicle_ID = default(int);
					}
					this.SendPropertyChanged("RentalVehicle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RentalLog")]
	public partial class RentalLog : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _LogId;
		
		private System.DateTime _LogDate;
		
		private string _LogThread;
		
		private string _LogLevel;
		
		private string _Logger;
		
		private string _LogMessage;
		
		private System.Nullable<int> _TransactionId;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnLogIdChanging(int value);
    partial void OnLogIdChanged();
    partial void OnLogDateChanging(System.DateTime value);
    partial void OnLogDateChanged();
    partial void OnLogThreadChanging(string value);
    partial void OnLogThreadChanged();
    partial void OnLogLevelChanging(string value);
    partial void OnLogLevelChanged();
    partial void OnLoggerChanging(string value);
    partial void OnLoggerChanged();
    partial void OnLogMessageChanging(string value);
    partial void OnLogMessageChanged();
    partial void OnTransactionIdChanging(System.Nullable<int> value);
    partial void OnTransactionIdChanged();
    #endregion
		
		public RentalLog()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int LogId
		{
			get
			{
				return this._LogId;
			}
			set
			{
				if ((this._LogId != value))
				{
					this.OnLogIdChanging(value);
					this.SendPropertyChanging();
					this._LogId = value;
					this.SendPropertyChanged("LogId");
					this.OnLogIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogDate", DbType="DateTime NOT NULL")]
		public System.DateTime LogDate
		{
			get
			{
				return this._LogDate;
			}
			set
			{
				if ((this._LogDate != value))
				{
					this.OnLogDateChanging(value);
					this.SendPropertyChanging();
					this._LogDate = value;
					this.SendPropertyChanged("LogDate");
					this.OnLogDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogThread", DbType="VarChar(255) NOT NULL", CanBeNull=false)]
		public string LogThread
		{
			get
			{
				return this._LogThread;
			}
			set
			{
				if ((this._LogThread != value))
				{
					this.OnLogThreadChanging(value);
					this.SendPropertyChanging();
					this._LogThread = value;
					this.SendPropertyChanged("LogThread");
					this.OnLogThreadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogLevel", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string LogLevel
		{
			get
			{
				return this._LogLevel;
			}
			set
			{
				if ((this._LogLevel != value))
				{
					this.OnLogLevelChanging(value);
					this.SendPropertyChanging();
					this._LogLevel = value;
					this.SendPropertyChanged("LogLevel");
					this.OnLogLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Logger", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Logger
		{
			get
			{
				return this._Logger;
			}
			set
			{
				if ((this._Logger != value))
				{
					this.OnLoggerChanging(value);
					this.SendPropertyChanging();
					this._Logger = value;
					this.SendPropertyChanged("Logger");
					this.OnLoggerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LogMessage", DbType="VarChar(4000) NOT NULL", CanBeNull=false)]
		public string LogMessage
		{
			get
			{
				return this._LogMessage;
			}
			set
			{
				if ((this._LogMessage != value))
				{
					this.OnLogMessageChanging(value);
					this.SendPropertyChanging();
					this._LogMessage = value;
					this.SendPropertyChanged("LogMessage");
					this.OnLogMessageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TransactionId", DbType="Int")]
		public System.Nullable<int> TransactionId
		{
			get
			{
				return this._TransactionId;
			}
			set
			{
				if ((this._TransactionId != value))
				{
					this.OnTransactionIdChanging(value);
					this.SendPropertyChanging();
					this._TransactionId = value;
					this.SendPropertyChanged("TransactionId");
					this.OnTransactionIdChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class sp_GetCustomerByLastNameResult
	{
		
		private int _Customer_Id;
		
		private string _FirstName;
		
		private string _LastName;
		
		private string _Address;
		
		private string _City;
		
		private string _State;
		
		private string _Zip;
		
		private string _Phone;
		
		private string _CompanyName;
		
		private string _CompanyPhone;
		
		private string _Email;
		
		private string _LicenseNumber;
		
		private string _CreditCard;
		
		private System.Nullable<bool> _DoNotRent;
		
		public sp_GetCustomerByLastNameResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Customer_Id", DbType="Int NOT NULL")]
		public int Customer_Id
		{
			get
			{
				return this._Customer_Id;
			}
			set
			{
				if ((this._Customer_Id != value))
				{
					this._Customer_Id = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FirstName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string FirstName
		{
			get
			{
				return this._FirstName;
			}
			set
			{
				if ((this._FirstName != value))
				{
					this._FirstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LastName", DbType="VarChar(32) NOT NULL", CanBeNull=false)]
		public string LastName
		{
			get
			{
				return this._LastName;
			}
			set
			{
				if ((this._LastName != value))
				{
					this._LastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(48) NOT NULL", CanBeNull=false)]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this._Address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_City", DbType="VarChar(24) NOT NULL", CanBeNull=false)]
		public string City
		{
			get
			{
				return this._City;
			}
			set
			{
				if ((this._City != value))
				{
					this._City = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_State", DbType="VarChar(2) NOT NULL", CanBeNull=false)]
		public string State
		{
			get
			{
				return this._State;
			}
			set
			{
				if ((this._State != value))
				{
					this._State = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Zip", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string Zip
		{
			get
			{
				return this._Zip;
			}
			set
			{
				if ((this._Zip != value))
				{
					this._Zip = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this._Phone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyName", DbType="VarChar(128)")]
		public string CompanyName
		{
			get
			{
				return this._CompanyName;
			}
			set
			{
				if ((this._CompanyName != value))
				{
					this._CompanyName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CompanyPhone", DbType="VarChar(12)")]
		public string CompanyPhone
		{
			get
			{
				return this._CompanyPhone;
			}
			set
			{
				if ((this._CompanyPhone != value))
				{
					this._CompanyPhone = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(64)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this._Email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LicenseNumber", DbType="VarChar(64) NOT NULL", CanBeNull=false)]
		public string LicenseNumber
		{
			get
			{
				return this._LicenseNumber;
			}
			set
			{
				if ((this._LicenseNumber != value))
				{
					this._LicenseNumber = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CreditCard", DbType="VarChar(50)")]
		public string CreditCard
		{
			get
			{
				return this._CreditCard;
			}
			set
			{
				if ((this._CreditCard != value))
				{
					this._CreditCard = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DoNotRent", DbType="Bit")]
		public System.Nullable<bool> DoNotRent
		{
			get
			{
				return this._DoNotRent;
			}
			set
			{
				if ((this._DoNotRent != value))
				{
					this._DoNotRent = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
